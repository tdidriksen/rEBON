<?xml version="1.0"?>

<project name="test" default="help">

  <description>
    description: "Eiffel Ant file for EBON tests"
    copyright: "Copyright (c) 2001, Joseph R. Kiniry"
    license: "Eiffel Forum License v2 (see forum.txt)"
    date: "$Date: 2005/05/02 23:20:48 $"
    revision: "$Revision: 1.1 $"
  </description>

  <target name="help">
    <echo message="usage:"/>
    <echo message="   geant install"/>
    <echo message="   geant test"/>
    <echo message="   geant test_ise"/>
    <echo message="   geant test_se"/>
    <echo message="   geant test_ve"/>
    <echo message="   geant test_debug"/>
    <echo message="   geant test_debug_ise"/>
    <echo message="   geant test_debug_se"/>
    <echo message="   geant test_debug_ve"/>
    <echo message="   geant clean"/>
    <echo message="   geant clobber"/>
  </target>

  <target name="install" depend="init">
    <description>
      Install the EBON tests.
    </description>

    <set name="target" value="install"/>
    <geant target="do_all"/>
  </target>

  <target name="test" depend="init">
    <description>
      Run EBON tests.  Use Eiffel compiler set in ${GOBO_EIFFEL} or
      'se' if this variable is not defined.
    </description>

    <set name="target" value="test"/>
    <set name="do_clean" value="true"/>
    <geant target="do_all"/>
  </target>

  <target name="test_ise" depend="init">
    <description>
      Run EBON tests with ISE Eiffel.
    </description>

    <set name="target" value="test_ise"/>
    <set name="do_clean" value="true"/>
    <geant target="do_all"/>
  </target>

  <target name="test_ve" depend="init">
    <description>
      Run EBON tests with Visual Eiffel.
    </description>

    <set name="target" value="test_ve"/>
    <set name="do_clean" value="true"/>
    <geant target="do_all"/>
  </target>

  <target name="test_se" depend="init">
    <description>
      Run EBON tests with SmartEiffel.
    </description>

    <set name="target" value="test_se"/>
    <set name="do_clean" value="true"/>
    <geant target="do_all"/>
  </target>

  <target name="test_debug" depend="init">
    <description>
      Run EBON tests in debug mode.  Use Eiffel compiler set in
      ${GOBO_EIFFEL} or 'se' if this variable is not defined.
    </description>

    <set name="target" value="test_debug"/>
    <set name="do_clean" value="true"/>
    <geant target="do_all"/>
  </target>

  <target name="test_debug_ise" depend="init">
    <description>
      Run EBON tests with ISE Eiffel in debug mode.
    </description>

    <set name="target" value="test_debug_ise"/>
    <set name="do_clean" value="true"/>
    <geant target="do_all"/>
  </target>

  <target name="test_debug_ve" depend="init">
    <description>
      Run EBON tests with Visual Eiffel in debug mode.
    </description>

    <set name="target" value="test_debug_ve"/>
    <set name="do_clean" value="true"/>
    <geant target="do_all"/>
  </target>

  <target name="test_debug_se" depend="init">
    <description>
      Run EBON tests with SmartEiffel in debug mode.
    </description>

    <set name="target" value="test_debug_se"/>
    <set name="do_clean" value="true"/>
    <geant target="do_all"/>
  </target>

  <target name="clean" depend="init">
    <description>
      Remove intermediary generated files.
    </description>

    <set name="target" value="clean"/>
    <geant target="do_all"/>
  </target>

  <target name="clobber" depend="init">
    <description>
      Remove all generated files.
    </description>

    <set name="target" value="clobber"/>
    <geant target="do_all"/>
  </target>


  <!-- Implementation -->

  <target name="init">
    <!-- do nothing -->
  </target>

  <target name="do_all" depend="init">
    <description>
      Call 'geant' with the same target ${target} in all
      subdirectories.
    </description>

    <geant file="build.eant" target="${target}" dir="scanner"/>
    <geant file="build.eant" target="clean" dir="scanner" if="${do_clean}"/>
    <geant file="build.eant" target="${target}" dir="parser"/>
    <geant file="build.eant" target="clean" dir="parser" if="${do_clean}"/>
  </target>

</project>
